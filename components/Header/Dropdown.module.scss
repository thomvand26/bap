.container {
  position: relative;
  height: fit-content;
}

button.toggleButton {
  --button-color: transparent;
  --button-radius: #{$border-radius};

  color: $color-secondary-darkest;
  height: fit-content;
  padding: $length-xs $length-l;
  border-radius: $border-radius;

  &:focus,
  &:focus-visible {
    box-shadow: 0 0 0 $focus-border-width $color-primary-light;

    &:not(:focus-visible) {
      box-shadow: 0 0 0 $focus-border-width $color-primary-light;
    }
  }

  & > span {
    max-width: $spacing-xl;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  &--small {
    padding: $length-xs $length-s;
  }

  &--open {
    box-shadow: 0 0 0 $focus-border-width $color-primary-light;
  }
}

.menu {
  position: absolute;
  right: 0;
  top: calc(100% + #{$focus-border-width});
  display: none;
  // padding: 0 $length-s;
  background-color: $color-secondary-lightest;
  border-radius: $border-radius;
  z-index: 10;
  box-shadow: 0 0 0 $focus-border-width $color-primary-light;

  &--fullWidth {
    width: 100%;
  }

  &--open {
    display: flex;
    flex-direction: column;
  }

  & li {
    &:global(.active) {
      &:after {
        display: none;
      }
    }

    &:not(:last-child) {
      & > * {
        position: relative;

        &:after {
          content: '';
          position: absolute;
          bottom: 0;
          height: 2px;
          left: $length-s;
          right: $length-s;
          background-color: $color-secondary-lighter;
          z-index: -1;
        }
      }
    }
  }

  & a,
  & button {
    display: block;
    padding: $length-s;
    width: 100%;
    text-align: left;
    color: $color-secondary-darker;
    cursor: pointer;

    @include focus(
      var(--button-focus-color, $color-primary-light),
      var(--button-background-color, $color-white),
      $border-radius-l,
      true,
      true,
      true
    );
  }
}

@media (max-width: $breakpoint-l) {
  .menu {
    right: unset;
    left: 50%;
    transform: translateX(-50%);
  }
}
