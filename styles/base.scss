@import url('https://fonts.googleapis.com/css2?family=Spartan:wght@400;700&display=swap');

@mixin focus {
  &:focus {
    outline: none;
    box-shadow: 0 0 0 $focus-border-width $color-primary;
  }
}

:root {
  --button-color: #{$color-primary-light};
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Spartan', sans-serif;
}

html,
body {
  box-sizing: border-box;
  background-color: $color-white;
}

main {
  display: flex;
  flex-direction: column;
  height: calc(100vh - var(--header-height, 0));
  width: 100%;

  &.horizontal {
    flex-direction: row;
  }
}

h2,
.h2 {
  font-size: $font-size-xl;
}

h3,
.h3 {
  font-size: $font-size-m;
}

h4,
.h4 {
  font-size: $font-size-s;
}

ol,
ul {
  list-style: none;
}

button,
input,
textarea,
select,
a,
button,
.button {
  @include focus;

  &:hover {
    filter: opacity(0.8);
  }
}

a {
  color: inherit;
  text-decoration: none;
  font-weight: bold;
}

button,
.button {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--button-color);
  border: none;
  border-radius: $border-radius-l;
  padding: $length-m;
  font-size: $font-size-m;
  font-weight: bold;
  min-height: $input-min-height;
  width: 180px;
  cursor: pointer;
  color: inherit;

  &--unstyled {
    background-color: inherit;
    border: inherit;
    border-radius: inherit;
    padding: 0;
    font-size: inherit;
    font-weight: inherit;
    min-height: 0;
    min-width: 0;
    width: fit-content;
    cursor: inherit;
  }

  &--danger {
    --button-color: #{$color-danger} !important;
  }

  &--lightest {
    --button-color: #{$color-secondary-lightest} !important;
  }

  &--lighter {
    --button-color: #{$color-secondary-lighter} !important;
  }

  &--dark {
    --button-color: #{$color-secondary-darker} !important;
  }

  &--darkest {
    --button-color: #{$color-secondary-darkest} !important;
  }

  &--primary {
    color: $color-secondary-darkest;
  }

  &--mini {
    padding: $length-xs $length-xs $length-xxs * 1.5;
    min-height: 0;
    height: fit-content;
    min-width: 0;
    width: fit-content;
    font-size: $font-size-s;
    border-radius: $border-radius;
  }

  &--fit {
    min-width: 0;
    width: fit-content;
  }

  &--text {
    padding: 0 $length-xxs;
    min-height: fit-content;
    background-color: transparent;
    color: $color-primary;
    width: fit-content;
  }

  &--icon {
    --button-color: #{$color-secondary-darker};

    min-width: 0;
    width: initial;
    background-color: rgba($color: $color-secondary-darkest, $alpha: 0);
    padding: 0.5rem;
    fill: var(--button-color);

    & > svg {
      fill: inherit;
    }

    &:hover {
      background-color: rgba($color: $color-secondary-darkest, $alpha: 0.1);
    }
  }

  &--ghost {
    background-color: transparent;
    border: $button-border-width solid $color-primary-light;
    border-color: var(--button-color);
    color: var(--button-color);
  }

  &--hover-light {
    &:hover,
    &:focus {
      background-color: rgba($color: $color-secondary-dark, $alpha: 0.2);
    }
  }

  &--noMinHeight {
    min-height: 0;
  }

  &:disabled {
    opacity: $opacity-disabled;
    pointer-events: none;
  }
}

.page {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: $spacing-m;

  &__title {
    margin-bottom: $spacing-m;
  }
}

.pageHeader {
  text-align: center;
  margin: $page-header-margin;
}

.container {
  width: 100%;
  padding-left: $length-xxl;
  padding-right: $length-xxl;

  &__content {
    width: 100%;
    max-width: $container-width;
    margin-left: auto;
    margin-right: auto;
  }
}

.form {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.dropdownIcon {
  transition: transform $transition-duration $transition-easing;
  margin-left: $length-xs;

  &.open {
    transform: rotate(180deg);
  }
}

.focus-inset {
  &:focus {
    outline: none;
    box-shadow: 0 0 0 $focus-border-width $color-primary inset;
  }
}

#__next {
  min-height: 100%;
}

// For tooltips (react-laag)
#layers {
  z-index: 1000;
}
